""" Read the colors.yaml file generated by Themer and write settings to Xresources """

import sys
import os
from sys import argv

THEME_NAME = sys.argv[1]
PROPERTY_FILE = os.path.expanduser("~/.config/themer/{}/colors.yaml".format(THEME_NAME))
XRESOURCES = os.path.expanduser("~/.Xresources-copy.txt") # using copy because Python has a hard time with file extensions
XRESOURCES_NEW = os.path.expanduser("~/.config/themer/{}/.Xresources.txt".format(THEME_NAME))

"""Parse the generated colors.yaml to get properties for Xresources"""
def get_color_properties():
    prop_dict = {}

    with open(PROPERTY_FILE, 'r') as prop_file:
        for line in prop_file:
            if "font" in line:
                continue
            color_property = line[0 : line.find(":")].capitalize()
            color_value = line[line.find("\'")+1 : line.rfind("\'")]
            prop_dict[color_property] = color_value
    return prop_dict

"""Write properties to Xresources"""
def write_properties(property_dict):
    xres = open(XRESOURCES, 'r')
    xres_new = open(XRESOURCES_NEW, 'w')

    for line in xres:
        if any("#define " + prop in line for prop in property_dict.keys()):
            orig_val = line[line.rfind('#'):].rstrip('\n')
            for prop in property_dict.keys():
                if prop in line:
                    line = "#define {:15} {}\n".format(prop, property_dict[prop])
        xres_new.write(line)

    xres.close()
    xres_new.close()

def main():
    property_dict = get_color_properties()
    write_properties(property_dict)


if __name__ == '__main__':
    main()